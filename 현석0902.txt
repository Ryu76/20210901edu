1. 상수란 무엇이며 변수와의 차이는?
상수 : 항상 변하지 않는값 
변수 선언 앞에 final을 입력하면 이후에 변수값 설정이 불가능해진다.
대신 변수명을 대문자로 선언해줘야 한다. 
둘 이상의 단어로 이뤄질경우 _(언더바로 연결해준다)
정수는 무조건 int형
실수는 무조건 double형


2. 초기화란?
변수, 상수에 값을 처음으로 대입해주는 것

3. 리터럴이란?
리터럴이란 프로그램에서 사용하는 모든 숫자, 문자, 논리값(true,false)을 일컫는 말
리터럴은 프로그램이 시작할 때 시스템에 같이 로딩되어 상수 풀(constant pool)에 놓인다.
변수, 상수에 값을 대입할때 상수풀에서 값을 가져와 대입하는 것 이다.

4.아래의 내용이 에러가 나는 이유와 수정 방법은?

java
System.out.println(3147483647L + 3147483648L); //에러남

int의 리터럴 범위를 벗어났다.
숫자뒤에 l,L을 입력하면 해결된다

5. 자동 형변환과 명시적 형변환에 대하여 설명하시오. - 형변환 : 데이터 타입 변환

바이트 크기가 작은 자료형에서 큰 자료형으로 형 변환은 자동으로 이루어진다.
ex) int-> long
덜 정밀한 자료형에서 더 정밀한 자료형으로 형 변환은 자동으로 이루어진다.
ex) int -> double
1)자동 형변환
CPU 연산시 두개의 데이터 타입이 일치 되어야만 연산가능
두개의 데이터 타입이 다른경우(대입과 연산) 형변환이 일어난다.

각각 변수의 형태가 감당할수 있는 범위를 벗어나기 때문에 형변환이 일어난다
ex)  int(정수형) double(실수형) 두개의 연산을 진행할때 
결과값이 실수형으로 나오기 때문에 형변환 후 출력을 진행해야함
정수+실수=실수 
값을 보존하는 쪽으로 형변환이 일어나야 된다.

• 규칙 1. 자료형의 크기가 큰 방향으로 형 변환이 일어난다.​
• 규칙 2. 자료형의 크기에 상관없이 정수 자료형보다 실수 자료형이 우선한다.

2)명시적 형변환
하위=(하위)상위 - 하위클래스로 변환하는 것을 명시해준다.
자동형 변환 규칙에 부합하지는 않지만, 형변환이 필요한 상황에 명시적 형 변환을 진행한다
값(Rvalue)앞에 괄호 치고 자료형을 적어주면 명시적 형변환이 된다.
오류가 나지 않는 이유(작성자가 의도하고 사용한 것 이기 때문.)
성능저하가 있을수 있지만, 최대한 오류가 안뜨는쪽이 좋다.

(승환님 정리)
- 자동 형변환은 피연산자의 자료형이 일치하지 않아서 일어나는 현상이다.
- 두 피연산자가 연산을 할려면 자료형이 같아야한다.
- 그러므로 자동으로 더 큰 자료형과 일치시키는 현상을 자동 형변환이라고 한다.


- 명시적 형변호나은 자동 형 변환 규칙에 부합하지는 않지만, 형변환이 필요한 상황이면 명시적 형 변환을 진행한다.
- 즉, 개발자가 더 큰 자료형이나 더 작은 자료형이 필요할 때 또는 자료형으로 인해 오류가 생길때 사용하는 방법이다




6.아래의 에러가 나는 이유를 설명하고 수정 하시오.

정수형 3을 4로 나누려고 하면 몫은 정수로 나와야 하기때문에 0.75가 아닌 0으로 나오고 나머지가 3일것이다 
또한 result는 몫을 대입받는것이기 때문에 결과값으로는 0이 출력됩니다

int a = 3;
int b = 4;
	
double result =(double) a / b;

System.out.println(result);

7. 이스케이프 시퀀스의 종류를 나열하고 기능을 설명하시오.

'\b'	백스페이스 문자
'\t'	탭 문자
'\\'	백슬래시 문자
'\''	작은따옴표 문자
'\"'	큰따옴표 문자
'\n'	개 행 문자
'\r'	캐리지 리턴 문자


8. 아래의 출력 결과를 확인하고, 130이 나오는 이유를 설명

System.out.println('A'); 
System.out.println('A' + 'A'); 
'A'는 단순 출력만 하기 때문에 연산과정 없이 A가 출력된다.
하지만 연산과정을 거치게 되면 자동 형변환으로 인해 char 형태 'A'+'A'를 더하게 되면 
int형으로 변환되면서 A의 값인 65+65 가 연산되어 130이 나온다

9. 결합 방향과 우선순위에 대하여 설명하시오.


10. "2의 배수 또는 3의 배수?" 를 코딩으로 표현하시오.
11. && 와 || 설명하시오.
&& = and
|| = or



12. 아래를 프로그래밍을 하시오.

-11 과 22 를 int로 선언후
-11이  1 초과 100 미만인가 인 숫자인가를 true  false 로 출력
-22가 2 또는 3의 배수인가를  true  false 로 출력

13.아래와 같이 출력값이 나오는 이유를 설명하시오.

public class Hello {
	public static void main(String[] args) {
		int ch = '1';
		int num = 1;		
		System.out.println(ch);
		System.out.println(num);   	    
	}
}

/* 
출력결과
49
1
*/
int ch = '1' 은 1의 코드값인 49를 출력하는 것이고 
int num = 1 은 1을 그대로 출력하는것이다.


14. ASCII(아스키 코드)란?

ASCII(American Standard Code for Information Interchange)
7비트의 이진수 조합으로 만들어져 총 128개의 부호를 표현


번외
캐스팅이란?
: 캐스팅이란 데이터의 형변환을 뜻하는 것이다.
정수를 입력하고 이것을 실수라고 선언한 변수 안에 넣어주면 -> 정수는 저절로 실수가 된다 (잃어버리는 값이 없음)
실수를 입력하고 이것을 정수라고 선언한 변수 안에 넣어주면 -> 오류가 난다. 잃어버리는 값이 있기 때문이다.
따라서 이에 대한 해결 방안은 2가지가 있는데,
첫 번째, 정수라고 선언한 변수를 아예 실수로 선언한다. (데이터 세이브)
두 번째, 넣을 값인 실수 앞에 (int)를 작성한다.

만약 정수 -> 문자열
String 변수 = Integer.toString(정수);
실수 -> 문자열
String 변수 = String.valueOf(실수);
문자열 -> 정수
int 변수 = Integer.parselnt(문자);
문자열 -> 실수
double 변수 = Double.parseDouble(문자);

- 자바에선 데이터의 손실이 일어날 경우, 캐스팅을 막는 것으로 보인다
